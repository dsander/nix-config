###########################################################################
#                             Global Settings                             #
###########################################################################

if-shell "which reattach-to-user-namespace" \
  'set-option -g default-command "reattach-to-user-namespace -l zsh"'

set -g default-terminal "screen-256color"

# focus events enabled for terminals that support them
# needed for vim autoread
set-option -g focus-events on

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
set-window-option -g aggressive-resize on

# set prefix key to match screen's
set -g prefix C-a
unbind-key C-b

# send the prefix to client inside window (ala nested sessions)
bind-key a send-prefix

# disable wait after escape, so vim is usable
set-option -sg escape-time 0

# Use vim keybindings in copy mode
# Port to 2.4: https://github.com/tmux/tmux/issues/592
setw -g mode-keys vi
bind-key -Tcopy-mode-vi 'v' send -X begin-selection
bind-key -Tcopy-mode-vi 'y' send -X copy-pipe "reattach-to-user-namespace pbcopy"
# unbind -Tcopy-mode-vi Enter
# bind-key -Tcopy-mode-vi 'Enter' send -X copy-pipe "reattach-to-user-namespace pbcopy"
unbind -Tcopy-mode-vi Space
bind -Tcopy-mode-vi 'Space' send -X jump-again
bind -Tcopy-mode-vi 0 send -X back-to-indentation
bind y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '
bind C-y run 'tmux save-buffer - | reattach-to-user-namespace pbcopy '

# turn on mouse mode
set-option -g mouse on
set -g @scroll-speed-num-lines-per-scroll "5"

# Ctrl-p/n for tmux command history -- the vi mode is more like shell vi mode
# than vi command mode
set-option -g status-keys emacs

# scrollback buffer n lines
set -g history-limit 10000

# bells and monitoring
set -g visual-activity on
set -g visual-silence on
#set -g visual-bell on
set -g bell-action any

# purdy status bar
set -g status-bg colour236
set -g status-fg white
set -g status-left "#[fg=green][#[fg=cyan]#S#[fg=green]]#[fg=colour250] %a %m/%d %H:%M#[default]"
set -g status-left-length 35
set -g status-justify centre
set-window-option -g window-status-current-style bg=colour98
setw -g window-status-current-format '#[fg=black,bg=yellow] #I #[fg=white,bg=colour98] #W #F '
set-window-option -g window-status-current-style bold
set -g status-right "#H #[fg=cyan][#(uptime|cut -d ' ' -f 12-)]#[default]"

# try to set wm window titles with xterm codes
set -g set-titles on

# Zero-based indexing for windows and panes isn't terribly sensible.
set-option -g base-index 1
set-window-option -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

# the panes display and status messages don't show very long by default
set -g display-panes-time 2000
set -g display-time 2000

###########################################################################
#                    Key Bindings - Screen and Vim-ish                    #
###########################################################################

bind-key c new-window

bind-key r source-file ~/.tmux.conf\; display-message "tmux config reloaded"

# toggle previous window like screen, although prefix-l will
# be easy to get used to
bind-key C-a last-window

# Smart pane switching with awareness of vim splits
# See this blog post for additional detail:
# http://robots.thoughtbot.com/post/53022241323/seamlessly-navigate-vim-and-tmux-splits
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
		| grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind -n 'C-\' if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# bind resizing of panes to H,J,K,L (resizes by steps of 10 lines/columns)
bind -n S-Left resize-pane -L 2
bind -n S-Right resize-pane -R 2
bind -n S-Down resize-pane -D 1
bind -n S-Up resize-pane -U 1
bind -n C-Left resize-pane -L 10
bind -n C-Right resize-pane -R 10
bind -n C-Down resize-pane -D 5
bind -n C-Up resize-pane -U 5

# remap kill window, add confirm map before killing server
unbind &
bind-key K confirm kill-window
bind-key X confirm kill-server

bind-key m setw monitor-activity
bind-key M command-prompt -p "interval (s)" "setw monitor-silence %%"

# name window
bind-key A command-prompt -I "#W" "rename-window %%"

# I'll give these mnemonic split bindings a try
# unbind %
# unbind '"'
bind '\' split-window -h
bind - split-window -v

# Make C-j display a selectable list of sessions
# bind C-j choose-tree
bind C-j split-window -v "tmux list-sessions | sed -E 's/:.*$//' | grep -v \"^$(tmux display-message -p '#S')\$\" | fzf --reverse | xargs tmux switch-client -t"

# Dismiss current pane to background window
bind b break-pane -d
bind C-b send-keys 'tat && exit' 'C-m'
bind-key ! run-shell '(tmux switch-client -l || tmux switch-client -n) && tmux kill-session -t "#S" || tmux kill-session'

# Prompted join-pane
bind-key j command-prompt -p "join pane from: " "join-pane -h -s '%%'"

# Easily swap a pane with the current pane
bind-key s display-panes\; command-prompt -p "pane #: " "swap-pane -t '%%'"


set-environment -gu RBENV_VERSION

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'nhdaly/tmux-better-mouse-mode'
set -g @plugin 'tmux-plugins/tmux-yank'

run '~/.tmux/plugins/tpm/tpm'


# This tmux statusbar config was created by tmuxline.vim
# on Sun, 10 Nov 2019

set -g status-justify "left"
set -g status "on"
set -g status-left-style "none"
set -g message-command-style "fg=#ffffff,bg=#262626"
set -g status-right-style "none"
set -g pane-active-border-style "fg=#0d61ac"
set -g status-style "none,bg=#151515"
set -g message-style "fg=#ffffff,bg=#262626"
set -g pane-border-style "fg=#262626"
set -g status-right-length "100"
set -g status-left-length "100"
setw -g window-status-activity-style "none"
setw -g window-status-separator ""
setw -g window-status-style "none,fg=#4f5b66,bg=#151515"
set -g status-left "#[fg=#d8dee9,bg=#0d61ac] #S #[fg=#0d61ac,bg=#151515,nobold,nounderscore,noitalics]"
set -g status-right "#[fg=#262626,bg=#151515,nobold,nounderscore,noitalics]#[fg=#ffffff,bg=#262626] %Y-%m-%d  %H:%M #[fg=#0d61ac,bg=#262626,nobold,nounderscore,noitalics]#[fg=#d8dee9,bg=#0d61ac] #h "
setw -g window-status-format "#[fg=#4f5b66,bg=#151515] #I #[fg=#4f5b66,bg=#151515] #W "
setw -g window-status-current-format "#[fg=#151515,bg=#262626,nobold,nounderscore,noitalics]#[fg=#ffffff,bg=#262626] #I #[fg=#ffffff,bg=#262626] #W #[fg=#262626,bg=#151515,nobold,nounderscore,noitalics]"
